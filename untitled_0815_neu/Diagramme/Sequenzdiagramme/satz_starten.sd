#![alle ArbeitsgÃ¤nge unterbrechen]
#!Anfang Deklaration
Actor:Actor
MainUIController:MainUIController[a,x]
GameController:GameController[a,x]
LogClass:Log[a,r] "Log"
/Log:Log[a,x]
/KI:KI[a,x]
/KIWorkerThread:KIWorkerThread[a,x]
Game:Game
/Set:Set[a]
CommunicationServer:CommunicationSever[a]
/ReadServerFileThread:ReadServerFileThread[a,x]
XMLParserClass:XMLParser[a,r] "XML Parser"
/XMLParser:XMLParser[a]
/ServerMessage:ServerMessage[a,x]
/GameEvent:GameEvent[a,x]
EventDispatcherClass:EventDispatcher[r] "EventDispatcher"
EventDispatcher:EventDispatcher[a]
EventListenerCollection:EventListenerCollection[x,a] 
/Event_Handler_Thread:Event_Handler_Thread[a,x]


#!Anfang Aktionen
#!AgUnterbrechen
	Actor:=MainUIController.handleEvent()
	MainUIController:=GameController.startSet()
	GameController:LogClass.getIntance()
	LogClass:Object=Log.new()
	GameController:=Log.write()
	GameController:=KI.new(Game)
	GameController:=Game.newSet(Set_running)
	Game:=Set.new()
[c:if withServer]
GameController:=CommunicationServer.enableReading(timeout,Path,Role)
CommunicationServer:=ReadServerFileThread.new()
CommunicationServer:>ReadServerFileThread.start()
CommunicationServer:stop
ReadServerFileThread[0]:=CommunicationServer.observe()
CommunicationServer:=CommunicationServer.read()
CommunicationServer:Object=XMLParserClass.getInstance()
CommunicationServer:=XMLParser.new()
CommunicationServer:ServerMessage=XMLParser.readXML(serverFile)
XMLParser:=ServerMessage.new()

[c:if Freigabe || Gewinner || Satzende ]
CommunicationServer:=CommunicationServer.fireGameEvent()
CommunicationServer:=GameEvent.new()
CommunicationServer:EventDispatcher=EventDispatcherClass.getInstance()
CommunicationServer:=EventDispatcher.triggerEvent(GameEvent)
EventDispatcher:=EventListenerCollection.propagate(GameEvent)
[c: foreach EventListener]
EventListenerCollection:=Event_Handler_Thread.new(GameEvent,Listener)
EventListenerCollection:>Event_Handler_Thread.start()
ReadServerFileThread[0]:=ReadServerFileThread.interrupt()
ReadServerFileThread:stop
Event_Handler_Thread:=GameController.handleEvent(GameEvent)
[c: switch Event Type]

--new OppMove
GameController:=GameController.oppMove(column)
GameController:=Game.addMove(column)
GameController:=KIWorkerThread.new()
GameController:>KIWorkerThread.start()
GameController:stop
KIWorkerThread:column=KI.calculateNextMove()
KIWorkerThread:=CommunicationServer.writeMove(column)
KIWorkerThread:=CommunicationServer.enableReading()
KIWorkerThread:=Game.addMove(column)
[/c]

[/c]
[/c] 
[/c]


	


